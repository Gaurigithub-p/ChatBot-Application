pipeline {
    agent any

    environment {
        AWS_REGION = 'ap-south-1'
        ECR_REPO = '913524937689.dkr.ecr.ap-south-1.amazonaws.com/chatbot'
        IMAGE_TAG = 'latest'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', credentialsId: 'f9be0753-932d-4f9f-b286-89574ea3d66c', url: 'https://github.com/Gaurigithub-p/ChatBot-Application.git'
            }
        }

        stage('npm Build') {
            steps {
                dir('.') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }

        stage('Docker Build & Push to ECR') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'aws-ecr-creds', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                        sh '''
                            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
                            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
                            aws configure set default.region $AWS_REGION

                            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO

                            docker build -t $ECR_REPO:$IMAGE_TAG project/frontend/
                            docker push $ECR_REPO:$IMAGE_TAG
                            docker rmi $ECR_REPO:$IMAGE_TAG || true
                        '''
                    }
                }
            }
        }

        stage('Terraform Apply - Create EKS Cluster') {
            steps {
                dir('project/infra') {
                    sh 'terraform init'
                    sh 'terraform plan'
                    sh 'terraform apply -auto-approve'
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                sh '''
                    aws eks --region $AWS_REGION update-kubeconfig --name chatbot-eks-cluster
                    kubectl apply -f k8s/deployment.yaml
                    kubectl apply -f k8s/service.yaml
                '''
            }
        }
    }
}
